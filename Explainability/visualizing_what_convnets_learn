{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"visualizing_what_convnets_learn","provenance":[{"file_id":"https://github.com/keras-team/keras-io/blob/master/examples/vision/ipynb/visualizing_what_convnets_learn.ipynb","timestamp":1637512283868}],"collapsed_sections":["ajZouW45BhUd","UsGayOgdBhUf","Ku_5H_R7BhUg"]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.0"}},"cells":[{"cell_type":"markdown","metadata":{"id":"XVULKXf7BhUa"},"source":["# Visualizing what convnets learn\n","\n","**Adapted from:** fchollet keras examples\n"]},{"cell_type":"markdown","metadata":{"id":"ajZouW45BhUd"},"source":["## Introduction\n","\n","In this example, we look into what sort of visual patterns image classification models\n","learn. We'll be using the `ResNet50V2` model, trained on the ImageNet dataset.\n","\n","Our process is simple: we will create input images that maximize the activation of\n","specific filters in a target layer (picked somewhere in the middle of the model: layer\n","`conv3_block4_out`). Such images represent a visualization of the\n","pattern that the filter responds to.\n"]},{"cell_type":"markdown","metadata":{"id":"wNz-qVXMBhUe"},"source":["## Setup\n"]},{"cell_type":"code","metadata":{"id":"8XdAtas0BhUe"},"source":["import numpy as np\n","import tensorflow as tf\n","from tensorflow import keras\n","\n","# The dimensions of our input image\n","img_width = 180\n","img_height = 180\n","# Our target layer: we will visualize the filters from this layer.\n","# See `model.summary()` for list of layer names, if you want to change this.\n","layer_name = \"conv5_block3_3_conv\""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"UsGayOgdBhUf"},"source":["## Build a feature extraction model\n"]},{"cell_type":"code","metadata":{"id":"8QAIYUAHBhUg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637527606607,"user_tz":-60,"elapsed":2995,"user":{"displayName":"Oluwatosin Alabi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11452325336631533332"}},"outputId":"c30c364b-d6fc-4196-80ec-af73c54d0508"},"source":["# Build a ResNet50V2 model loaded with pre-trained ImageNet weights\n","model = keras.applications.ResNet50V2(weights=\"imagenet\", include_top=False)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50v2_weights_tf_dim_ordering_tf_kernels_notop.h5\n","94674944/94668760 [==============================] - 1s 0us/step\n","94683136/94668760 [==============================] - 1s 0us/step\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xcSdO_ULV6BF","executionInfo":{"status":"ok","timestamp":1637530005960,"user_tz":-60,"elapsed":242,"user":{"displayName":"Oluwatosin Alabi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11452325336631533332"}},"outputId":"da12732e-51b8-453d-821e-d8f6480e3948"},"source":["model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"resnet50v2\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_1 (InputLayer)           [(None, None, None,  0           []                               \n","                                 3)]                                                              \n","                                                                                                  \n"," conv1_pad (ZeroPadding2D)      (None, None, None,   0           ['input_1[0][0]']                \n","                                3)                                                                \n","                                                                                                  \n"," conv1_conv (Conv2D)            (None, None, None,   9472        ['conv1_pad[0][0]']              \n","                                64)                                                               \n","                                                                                                  \n"," pool1_pad (ZeroPadding2D)      (None, None, None,   0           ['conv1_conv[0][0]']             \n","                                64)                                                               \n","                                                                                                  \n"," pool1_pool (MaxPooling2D)      (None, None, None,   0           ['pool1_pad[0][0]']              \n","                                64)                                                               \n","                                                                                                  \n"," conv2_block1_preact_bn (BatchN  (None, None, None,   256        ['pool1_pool[0][0]']             \n"," ormalization)                  64)                                                               \n","                                                                                                  \n"," conv2_block1_preact_relu (Acti  (None, None, None,   0          ['conv2_block1_preact_bn[0][0]'] \n"," vation)                        64)                                                               \n","                                                                                                  \n"," conv2_block1_1_conv (Conv2D)   (None, None, None,   4096        ['conv2_block1_preact_relu[0][0]'\n","                                64)                              ]                                \n","                                                                                                  \n"," conv2_block1_1_bn (BatchNormal  (None, None, None,   256        ['conv2_block1_1_conv[0][0]']    \n"," ization)                       64)                                                               \n","                                                                                                  \n"," conv2_block1_1_relu (Activatio  (None, None, None,   0          ['conv2_block1_1_bn[0][0]']      \n"," n)                             64)                                                               \n","                                                                                                  \n"," conv2_block1_2_pad (ZeroPaddin  (None, None, None,   0          ['conv2_block1_1_relu[0][0]']    \n"," g2D)                           64)                                                               \n","                                                                                                  \n"," conv2_block1_2_conv (Conv2D)   (None, None, None,   36864       ['conv2_block1_2_pad[0][0]']     \n","                                64)                                                               \n","                                                                                                  \n"," conv2_block1_2_bn (BatchNormal  (None, None, None,   256        ['conv2_block1_2_conv[0][0]']    \n"," ization)                       64)                                                               \n","                                                                                                  \n"," conv2_block1_2_relu (Activatio  (None, None, None,   0          ['conv2_block1_2_bn[0][0]']      \n"," n)                             64)                                                               \n","                                                                                                  \n"," conv2_block1_0_conv (Conv2D)   (None, None, None,   16640       ['conv2_block1_preact_relu[0][0]'\n","                                256)                             ]                                \n","                                                                                                  \n"," conv2_block1_3_conv (Conv2D)   (None, None, None,   16640       ['conv2_block1_2_relu[0][0]']    \n","                                256)                                                              \n","                                                                                                  \n"," conv2_block1_out (Add)         (None, None, None,   0           ['conv2_block1_0_conv[0][0]',    \n","                                256)                              'conv2_block1_3_conv[0][0]']    \n","                                                                                                  \n"," conv2_block2_preact_bn (BatchN  (None, None, None,   1024       ['conv2_block1_out[0][0]']       \n"," ormalization)                  256)                                                              \n","                                                                                                  \n"," conv2_block2_preact_relu (Acti  (None, None, None,   0          ['conv2_block2_preact_bn[0][0]'] \n"," vation)                        256)                                                              \n","                                                                                                  \n"," conv2_block2_1_conv (Conv2D)   (None, None, None,   16384       ['conv2_block2_preact_relu[0][0]'\n","                                64)                              ]                                \n","                                                                                                  \n"," conv2_block2_1_bn (BatchNormal  (None, None, None,   256        ['conv2_block2_1_conv[0][0]']    \n"," ization)                       64)                                                               \n","                                                                                                  \n"," conv2_block2_1_relu (Activatio  (None, None, None,   0          ['conv2_block2_1_bn[0][0]']      \n"," n)                             64)                                                               \n","                                                                                                  \n"," conv2_block2_2_pad (ZeroPaddin  (None, None, None,   0          ['conv2_block2_1_relu[0][0]']    \n"," g2D)                           64)                                                               \n","                                                                                                  \n"," conv2_block2_2_conv (Conv2D)   (None, None, None,   36864       ['conv2_block2_2_pad[0][0]']     \n","                                64)                                                               \n","                                                                                                  \n"," conv2_block2_2_bn (BatchNormal  (None, None, None,   256        ['conv2_block2_2_conv[0][0]']    \n"," ization)                       64)                                                               \n","                                                                                                  \n"," conv2_block2_2_relu (Activatio  (None, None, None,   0          ['conv2_block2_2_bn[0][0]']      \n"," n)                             64)                                                               \n","                                                                                                  \n"," conv2_block2_3_conv (Conv2D)   (None, None, None,   16640       ['conv2_block2_2_relu[0][0]']    \n","                                256)                                                              \n","                                                                                                  \n"," conv2_block2_out (Add)         (None, None, None,   0           ['conv2_block1_out[0][0]',       \n","                                256)                              'conv2_block2_3_conv[0][0]']    \n","                                                                                                  \n"," conv2_block3_preact_bn (BatchN  (None, None, None,   1024       ['conv2_block2_out[0][0]']       \n"," ormalization)                  256)                                                              \n","                                                                                                  \n"," conv2_block3_preact_relu (Acti  (None, None, None,   0          ['conv2_block3_preact_bn[0][0]'] \n"," vation)                        256)                                                              \n","                                                                                                  \n"," conv2_block3_1_conv (Conv2D)   (None, None, None,   16384       ['conv2_block3_preact_relu[0][0]'\n","                                64)                              ]                                \n","                                                                                                  \n"," conv2_block3_1_bn (BatchNormal  (None, None, None,   256        ['conv2_block3_1_conv[0][0]']    \n"," ization)                       64)                                                               \n","                                                                                                  \n"," conv2_block3_1_relu (Activatio  (None, None, None,   0          ['conv2_block3_1_bn[0][0]']      \n"," n)                             64)                                                               \n","                                                                                                  \n"," conv2_block3_2_pad (ZeroPaddin  (None, None, None,   0          ['conv2_block3_1_relu[0][0]']    \n"," g2D)                           64)                                                               \n","                                                                                                  \n"," conv2_block3_2_conv (Conv2D)   (None, None, None,   36864       ['conv2_block3_2_pad[0][0]']     \n","                                64)                                                               \n","                                                                                                  \n"," conv2_block3_2_bn (BatchNormal  (None, None, None,   256        ['conv2_block3_2_conv[0][0]']    \n"," ization)                       64)                                                               \n","                                                                                                  \n"," conv2_block3_2_relu (Activatio  (None, None, None,   0          ['conv2_block3_2_bn[0][0]']      \n"," n)                             64)                                                               \n","                                                                                                  \n"," max_pooling2d (MaxPooling2D)   (None, None, None,   0           ['conv2_block2_out[0][0]']       \n","                                256)                                                              \n","                                                                                                  \n"," conv2_block3_3_conv (Conv2D)   (None, None, None,   16640       ['conv2_block3_2_relu[0][0]']    \n","                                256)                                                              \n","                                                                                                  \n"," conv2_block3_out (Add)         (None, None, None,   0           ['max_pooling2d[0][0]',          \n","                                256)                              'conv2_block3_3_conv[0][0]']    \n","                                                                                                  \n"," conv3_block1_preact_bn (BatchN  (None, None, None,   1024       ['conv2_block3_out[0][0]']       \n"," ormalization)                  256)                                                              \n","                                                                                                  \n"," conv3_block1_preact_relu (Acti  (None, None, None,   0          ['conv3_block1_preact_bn[0][0]'] \n"," vation)                        256)                                                              \n","                                                                                                  \n"," conv3_block1_1_conv (Conv2D)   (None, None, None,   32768       ['conv3_block1_preact_relu[0][0]'\n","                                128)                             ]                                \n","                                                                                                  \n"," conv3_block1_1_bn (BatchNormal  (None, None, None,   512        ['conv3_block1_1_conv[0][0]']    \n"," ization)                       128)                                                              \n","                                                                                                  \n"," conv3_block1_1_relu (Activatio  (None, None, None,   0          ['conv3_block1_1_bn[0][0]']      \n"," n)                             128)                                                              \n","                                                                                                  \n"," conv3_block1_2_pad (ZeroPaddin  (None, None, None,   0          ['conv3_block1_1_relu[0][0]']    \n"," g2D)                           128)                                                              \n","                                                                                                  \n"," conv3_block1_2_conv (Conv2D)   (None, None, None,   147456      ['conv3_block1_2_pad[0][0]']     \n","                                128)                                                              \n","                                                                                                  \n"," conv3_block1_2_bn (BatchNormal  (None, None, None,   512        ['conv3_block1_2_conv[0][0]']    \n"," ization)                       128)                                                              \n","                                                                                                  \n"," conv3_block1_2_relu (Activatio  (None, None, None,   0          ['conv3_block1_2_bn[0][0]']      \n"," n)                             128)                                                              \n","                                                                                                  \n"," conv3_block1_0_conv (Conv2D)   (None, None, None,   131584      ['conv3_block1_preact_relu[0][0]'\n","                                512)                             ]                                \n","                                                                                                  \n"," conv3_block1_3_conv (Conv2D)   (None, None, None,   66048       ['conv3_block1_2_relu[0][0]']    \n","                                512)                                                              \n","                                                                                                  \n"," conv3_block1_out (Add)         (None, None, None,   0           ['conv3_block1_0_conv[0][0]',    \n","                                512)                              'conv3_block1_3_conv[0][0]']    \n","                                                                                                  \n"," conv3_block2_preact_bn (BatchN  (None, None, None,   2048       ['conv3_block1_out[0][0]']       \n"," ormalization)                  512)                                                              \n","                                                                                                  \n"," conv3_block2_preact_relu (Acti  (None, None, None,   0          ['conv3_block2_preact_bn[0][0]'] \n"," vation)                        512)                                                              \n","                                                                                                  \n"," conv3_block2_1_conv (Conv2D)   (None, None, None,   65536       ['conv3_block2_preact_relu[0][0]'\n","                                128)                             ]                                \n","                                                                                                  \n"," conv3_block2_1_bn (BatchNormal  (None, None, None,   512        ['conv3_block2_1_conv[0][0]']    \n"," ization)                       128)                                                              \n","                                                                                                  \n"," conv3_block2_1_relu (Activatio  (None, None, None,   0          ['conv3_block2_1_bn[0][0]']      \n"," n)                             128)                                                              \n","                                                                                                  \n"," conv3_block2_2_pad (ZeroPaddin  (None, None, None,   0          ['conv3_block2_1_relu[0][0]']    \n"," g2D)                           128)                                                              \n","                                                                                                  \n"," conv3_block2_2_conv (Conv2D)   (None, None, None,   147456      ['conv3_block2_2_pad[0][0]']     \n","                                128)                                                              \n","                                                                                                  \n"," conv3_block2_2_bn (BatchNormal  (None, None, None,   512        ['conv3_block2_2_conv[0][0]']    \n"," ization)                       128)                                                              \n","                                                                                                  \n"," conv3_block2_2_relu (Activatio  (None, None, None,   0          ['conv3_block2_2_bn[0][0]']      \n"," n)                             128)                                                              \n","                                                                                                  \n"," conv3_block2_3_conv (Conv2D)   (None, None, None,   66048       ['conv3_block2_2_relu[0][0]']    \n","                                512)                                                              \n","                                                                                                  \n"," conv3_block2_out (Add)         (None, None, None,   0           ['conv3_block1_out[0][0]',       \n","                                512)                              'conv3_block2_3_conv[0][0]']    \n","                                                                                                  \n"," conv3_block3_preact_bn (BatchN  (None, None, None,   2048       ['conv3_block2_out[0][0]']       \n"," ormalization)                  512)                                                              \n","                                                                                                  \n"," conv3_block3_preact_relu (Acti  (None, None, None,   0          ['conv3_block3_preact_bn[0][0]'] \n"," vation)                        512)                                                              \n","                                                                                                  \n"," conv3_block3_1_conv (Conv2D)   (None, None, None,   65536       ['conv3_block3_preact_relu[0][0]'\n","                                128)                             ]                                \n","                                                                                                  \n"," conv3_block3_1_bn (BatchNormal  (None, None, None,   512        ['conv3_block3_1_conv[0][0]']    \n"," ization)                       128)                                                              \n","                                                                                                  \n"," conv3_block3_1_relu (Activatio  (None, None, None,   0          ['conv3_block3_1_bn[0][0]']      \n"," n)                             128)                                                              \n","                                                                                                  \n"," conv3_block3_2_pad (ZeroPaddin  (None, None, None,   0          ['conv3_block3_1_relu[0][0]']    \n"," g2D)                           128)                                                              \n","                                                                                                  \n"," conv3_block3_2_conv (Conv2D)   (None, None, None,   147456      ['conv3_block3_2_pad[0][0]']     \n","                                128)                                                              \n","                                                                                                  \n"," conv3_block3_2_bn (BatchNormal  (None, None, None,   512        ['conv3_block3_2_conv[0][0]']    \n"," ization)                       128)                                                              \n","                                                                                                  \n"," conv3_block3_2_relu (Activatio  (None, None, None,   0          ['conv3_block3_2_bn[0][0]']      \n"," n)                             128)                                                              \n","                                                                                                  \n"," conv3_block3_3_conv (Conv2D)   (None, None, None,   66048       ['conv3_block3_2_relu[0][0]']    \n","                                512)                                                              \n","                                                                                                  \n"," conv3_block3_out (Add)         (None, None, None,   0           ['conv3_block2_out[0][0]',       \n","                                512)                              'conv3_block3_3_conv[0][0]']    \n","                                                                                                  \n"," conv3_block4_preact_bn (BatchN  (None, None, None,   2048       ['conv3_block3_out[0][0]']       \n"," ormalization)                  512)                                                              \n","                                                                                                  \n"," conv3_block4_preact_relu (Acti  (None, None, None,   0          ['conv3_block4_preact_bn[0][0]'] \n"," vation)                        512)                                                              \n","                                                                                                  \n"," conv3_block4_1_conv (Conv2D)   (None, None, None,   65536       ['conv3_block4_preact_relu[0][0]'\n","                                128)                             ]                                \n","                                                                                                  \n"," conv3_block4_1_bn (BatchNormal  (None, None, None,   512        ['conv3_block4_1_conv[0][0]']    \n"," ization)                       128)                                                              \n","                                                                                                  \n"," conv3_block4_1_relu (Activatio  (None, None, None,   0          ['conv3_block4_1_bn[0][0]']      \n"," n)                             128)                                                              \n","                                                                                                  \n"," conv3_block4_2_pad (ZeroPaddin  (None, None, None,   0          ['conv3_block4_1_relu[0][0]']    \n"," g2D)                           128)                                                              \n","                                                                                                  \n"," conv3_block4_2_conv (Conv2D)   (None, None, None,   147456      ['conv3_block4_2_pad[0][0]']     \n","                                128)                                                              \n","                                                                                                  \n"," conv3_block4_2_bn (BatchNormal  (None, None, None,   512        ['conv3_block4_2_conv[0][0]']    \n"," ization)                       128)                                                              \n","                                                                                                  \n"," conv3_block4_2_relu (Activatio  (None, None, None,   0          ['conv3_block4_2_bn[0][0]']      \n"," n)                             128)                                                              \n","                                                                                                  \n"," max_pooling2d_1 (MaxPooling2D)  (None, None, None,   0          ['conv3_block3_out[0][0]']       \n","                                512)                                                              \n","                                                                                                  \n"," conv3_block4_3_conv (Conv2D)   (None, None, None,   66048       ['conv3_block4_2_relu[0][0]']    \n","                                512)                                                              \n","                                                                                                  \n"," conv3_block4_out (Add)         (None, None, None,   0           ['max_pooling2d_1[0][0]',        \n","                                512)                              'conv3_block4_3_conv[0][0]']    \n","                                                                                                  \n"," conv4_block1_preact_bn (BatchN  (None, None, None,   2048       ['conv3_block4_out[0][0]']       \n"," ormalization)                  512)                                                              \n","                                                                                                  \n"," conv4_block1_preact_relu (Acti  (None, None, None,   0          ['conv4_block1_preact_bn[0][0]'] \n"," vation)                        512)                                                              \n","                                                                                                  \n"," conv4_block1_1_conv (Conv2D)   (None, None, None,   131072      ['conv4_block1_preact_relu[0][0]'\n","                                256)                             ]                                \n","                                                                                                  \n"," conv4_block1_1_bn (BatchNormal  (None, None, None,   1024       ['conv4_block1_1_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block1_1_relu (Activatio  (None, None, None,   0          ['conv4_block1_1_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," conv4_block1_2_pad (ZeroPaddin  (None, None, None,   0          ['conv4_block1_1_relu[0][0]']    \n"," g2D)                           256)                                                              \n","                                                                                                  \n"," conv4_block1_2_conv (Conv2D)   (None, None, None,   589824      ['conv4_block1_2_pad[0][0]']     \n","                                256)                                                              \n","                                                                                                  \n"," conv4_block1_2_bn (BatchNormal  (None, None, None,   1024       ['conv4_block1_2_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block1_2_relu (Activatio  (None, None, None,   0          ['conv4_block1_2_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," conv4_block1_0_conv (Conv2D)   (None, None, None,   525312      ['conv4_block1_preact_relu[0][0]'\n","                                1024)                            ]                                \n","                                                                                                  \n"," conv4_block1_3_conv (Conv2D)   (None, None, None,   263168      ['conv4_block1_2_relu[0][0]']    \n","                                1024)                                                             \n","                                                                                                  \n"," conv4_block1_out (Add)         (None, None, None,   0           ['conv4_block1_0_conv[0][0]',    \n","                                1024)                             'conv4_block1_3_conv[0][0]']    \n","                                                                                                  \n"," conv4_block2_preact_bn (BatchN  (None, None, None,   4096       ['conv4_block1_out[0][0]']       \n"," ormalization)                  1024)                                                             \n","                                                                                                  \n"," conv4_block2_preact_relu (Acti  (None, None, None,   0          ['conv4_block2_preact_bn[0][0]'] \n"," vation)                        1024)                                                             \n","                                                                                                  \n"," conv4_block2_1_conv (Conv2D)   (None, None, None,   262144      ['conv4_block2_preact_relu[0][0]'\n","                                256)                             ]                                \n","                                                                                                  \n"," conv4_block2_1_bn (BatchNormal  (None, None, None,   1024       ['conv4_block2_1_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block2_1_relu (Activatio  (None, None, None,   0          ['conv4_block2_1_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," conv4_block2_2_pad (ZeroPaddin  (None, None, None,   0          ['conv4_block2_1_relu[0][0]']    \n"," g2D)                           256)                                                              \n","                                                                                                  \n"," conv4_block2_2_conv (Conv2D)   (None, None, None,   589824      ['conv4_block2_2_pad[0][0]']     \n","                                256)                                                              \n","                                                                                                  \n"," conv4_block2_2_bn (BatchNormal  (None, None, None,   1024       ['conv4_block2_2_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block2_2_relu (Activatio  (None, None, None,   0          ['conv4_block2_2_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," conv4_block2_3_conv (Conv2D)   (None, None, None,   263168      ['conv4_block2_2_relu[0][0]']    \n","                                1024)                                                             \n","                                                                                                  \n"," conv4_block2_out (Add)         (None, None, None,   0           ['conv4_block1_out[0][0]',       \n","                                1024)                             'conv4_block2_3_conv[0][0]']    \n","                                                                                                  \n"," conv4_block3_preact_bn (BatchN  (None, None, None,   4096       ['conv4_block2_out[0][0]']       \n"," ormalization)                  1024)                                                             \n","                                                                                                  \n"," conv4_block3_preact_relu (Acti  (None, None, None,   0          ['conv4_block3_preact_bn[0][0]'] \n"," vation)                        1024)                                                             \n","                                                                                                  \n"," conv4_block3_1_conv (Conv2D)   (None, None, None,   262144      ['conv4_block3_preact_relu[0][0]'\n","                                256)                             ]                                \n","                                                                                                  \n"," conv4_block3_1_bn (BatchNormal  (None, None, None,   1024       ['conv4_block3_1_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block3_1_relu (Activatio  (None, None, None,   0          ['conv4_block3_1_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," conv4_block3_2_pad (ZeroPaddin  (None, None, None,   0          ['conv4_block3_1_relu[0][0]']    \n"," g2D)                           256)                                                              \n","                                                                                                  \n"," conv4_block3_2_conv (Conv2D)   (None, None, None,   589824      ['conv4_block3_2_pad[0][0]']     \n","                                256)                                                              \n","                                                                                                  \n"," conv4_block3_2_bn (BatchNormal  (None, None, None,   1024       ['conv4_block3_2_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block3_2_relu (Activatio  (None, None, None,   0          ['conv4_block3_2_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," conv4_block3_3_conv (Conv2D)   (None, None, None,   263168      ['conv4_block3_2_relu[0][0]']    \n","                                1024)                                                             \n","                                                                                                  \n"," conv4_block3_out (Add)         (None, None, None,   0           ['conv4_block2_out[0][0]',       \n","                                1024)                             'conv4_block3_3_conv[0][0]']    \n","                                                                                                  \n"," conv4_block4_preact_bn (BatchN  (None, None, None,   4096       ['conv4_block3_out[0][0]']       \n"," ormalization)                  1024)                                                             \n","                                                                                                  \n"," conv4_block4_preact_relu (Acti  (None, None, None,   0          ['conv4_block4_preact_bn[0][0]'] \n"," vation)                        1024)                                                             \n","                                                                                                  \n"," conv4_block4_1_conv (Conv2D)   (None, None, None,   262144      ['conv4_block4_preact_relu[0][0]'\n","                                256)                             ]                                \n","                                                                                                  \n"," conv4_block4_1_bn (BatchNormal  (None, None, None,   1024       ['conv4_block4_1_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block4_1_relu (Activatio  (None, None, None,   0          ['conv4_block4_1_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," conv4_block4_2_pad (ZeroPaddin  (None, None, None,   0          ['conv4_block4_1_relu[0][0]']    \n"," g2D)                           256)                                                              \n","                                                                                                  \n"," conv4_block4_2_conv (Conv2D)   (None, None, None,   589824      ['conv4_block4_2_pad[0][0]']     \n","                                256)                                                              \n","                                                                                                  \n"," conv4_block4_2_bn (BatchNormal  (None, None, None,   1024       ['conv4_block4_2_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block4_2_relu (Activatio  (None, None, None,   0          ['conv4_block4_2_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," conv4_block4_3_conv (Conv2D)   (None, None, None,   263168      ['conv4_block4_2_relu[0][0]']    \n","                                1024)                                                             \n","                                                                                                  \n"," conv4_block4_out (Add)         (None, None, None,   0           ['conv4_block3_out[0][0]',       \n","                                1024)                             'conv4_block4_3_conv[0][0]']    \n","                                                                                                  \n"," conv4_block5_preact_bn (BatchN  (None, None, None,   4096       ['conv4_block4_out[0][0]']       \n"," ormalization)                  1024)                                                             \n","                                                                                                  \n"," conv4_block5_preact_relu (Acti  (None, None, None,   0          ['conv4_block5_preact_bn[0][0]'] \n"," vation)                        1024)                                                             \n","                                                                                                  \n"," conv4_block5_1_conv (Conv2D)   (None, None, None,   262144      ['conv4_block5_preact_relu[0][0]'\n","                                256)                             ]                                \n","                                                                                                  \n"," conv4_block5_1_bn (BatchNormal  (None, None, None,   1024       ['conv4_block5_1_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block5_1_relu (Activatio  (None, None, None,   0          ['conv4_block5_1_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," conv4_block5_2_pad (ZeroPaddin  (None, None, None,   0          ['conv4_block5_1_relu[0][0]']    \n"," g2D)                           256)                                                              \n","                                                                                                  \n"," conv4_block5_2_conv (Conv2D)   (None, None, None,   589824      ['conv4_block5_2_pad[0][0]']     \n","                                256)                                                              \n","                                                                                                  \n"," conv4_block5_2_bn (BatchNormal  (None, None, None,   1024       ['conv4_block5_2_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block5_2_relu (Activatio  (None, None, None,   0          ['conv4_block5_2_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," conv4_block5_3_conv (Conv2D)   (None, None, None,   263168      ['conv4_block5_2_relu[0][0]']    \n","                                1024)                                                             \n","                                                                                                  \n"," conv4_block5_out (Add)         (None, None, None,   0           ['conv4_block4_out[0][0]',       \n","                                1024)                             'conv4_block5_3_conv[0][0]']    \n","                                                                                                  \n"," conv4_block6_preact_bn (BatchN  (None, None, None,   4096       ['conv4_block5_out[0][0]']       \n"," ormalization)                  1024)                                                             \n","                                                                                                  \n"," conv4_block6_preact_relu (Acti  (None, None, None,   0          ['conv4_block6_preact_bn[0][0]'] \n"," vation)                        1024)                                                             \n","                                                                                                  \n"," conv4_block6_1_conv (Conv2D)   (None, None, None,   262144      ['conv4_block6_preact_relu[0][0]'\n","                                256)                             ]                                \n","                                                                                                  \n"," conv4_block6_1_bn (BatchNormal  (None, None, None,   1024       ['conv4_block6_1_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block6_1_relu (Activatio  (None, None, None,   0          ['conv4_block6_1_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," conv4_block6_2_pad (ZeroPaddin  (None, None, None,   0          ['conv4_block6_1_relu[0][0]']    \n"," g2D)                           256)                                                              \n","                                                                                                  \n"," conv4_block6_2_conv (Conv2D)   (None, None, None,   589824      ['conv4_block6_2_pad[0][0]']     \n","                                256)                                                              \n","                                                                                                  \n"," conv4_block6_2_bn (BatchNormal  (None, None, None,   1024       ['conv4_block6_2_conv[0][0]']    \n"," ization)                       256)                                                              \n","                                                                                                  \n"," conv4_block6_2_relu (Activatio  (None, None, None,   0          ['conv4_block6_2_bn[0][0]']      \n"," n)                             256)                                                              \n","                                                                                                  \n"," max_pooling2d_2 (MaxPooling2D)  (None, None, None,   0          ['conv4_block5_out[0][0]']       \n","                                1024)                                                             \n","                                                                                                  \n"," conv4_block6_3_conv (Conv2D)   (None, None, None,   263168      ['conv4_block6_2_relu[0][0]']    \n","                                1024)                                                             \n","                                                                                                  \n"," conv4_block6_out (Add)         (None, None, None,   0           ['max_pooling2d_2[0][0]',        \n","                                1024)                             'conv4_block6_3_conv[0][0]']    \n","                                                                                                  \n"," conv5_block1_preact_bn (BatchN  (None, None, None,   4096       ['conv4_block6_out[0][0]']       \n"," ormalization)                  1024)                                                             \n","                                                                                                  \n"," conv5_block1_preact_relu (Acti  (None, None, None,   0          ['conv5_block1_preact_bn[0][0]'] \n"," vation)                        1024)                                                             \n","                                                                                                  \n"," conv5_block1_1_conv (Conv2D)   (None, None, None,   524288      ['conv5_block1_preact_relu[0][0]'\n","                                512)                             ]                                \n","                                                                                                  \n"," conv5_block1_1_bn (BatchNormal  (None, None, None,   2048       ['conv5_block1_1_conv[0][0]']    \n"," ization)                       512)                                                              \n","                                                                                                  \n"," conv5_block1_1_relu (Activatio  (None, None, None,   0          ['conv5_block1_1_bn[0][0]']      \n"," n)                             512)                                                              \n","                                                                                                  \n"," conv5_block1_2_pad (ZeroPaddin  (None, None, None,   0          ['conv5_block1_1_relu[0][0]']    \n"," g2D)                           512)                                                              \n","                                                                                                  \n"," conv5_block1_2_conv (Conv2D)   (None, None, None,   2359296     ['conv5_block1_2_pad[0][0]']     \n","                                512)                                                              \n","                                                                                                  \n"," conv5_block1_2_bn (BatchNormal  (None, None, None,   2048       ['conv5_block1_2_conv[0][0]']    \n"," ization)                       512)                                                              \n","                                                                                                  \n"," conv5_block1_2_relu (Activatio  (None, None, None,   0          ['conv5_block1_2_bn[0][0]']      \n"," n)                             512)                                                              \n","                                                                                                  \n"," conv5_block1_0_conv (Conv2D)   (None, None, None,   2099200     ['conv5_block1_preact_relu[0][0]'\n","                                2048)                            ]                                \n","                                                                                                  \n"," conv5_block1_3_conv (Conv2D)   (None, None, None,   1050624     ['conv5_block1_2_relu[0][0]']    \n","                                2048)                                                             \n","                                                                                                  \n"," conv5_block1_out (Add)         (None, None, None,   0           ['conv5_block1_0_conv[0][0]',    \n","                                2048)                             'conv5_block1_3_conv[0][0]']    \n","                                                                                                  \n"," conv5_block2_preact_bn (BatchN  (None, None, None,   8192       ['conv5_block1_out[0][0]']       \n"," ormalization)                  2048)                                                             \n","                                                                                                  \n"," conv5_block2_preact_relu (Acti  (None, None, None,   0          ['conv5_block2_preact_bn[0][0]'] \n"," vation)                        2048)                                                             \n","                                                                                                  \n"," conv5_block2_1_conv (Conv2D)   (None, None, None,   1048576     ['conv5_block2_preact_relu[0][0]'\n","                                512)                             ]                                \n","                                                                                                  \n"," conv5_block2_1_bn (BatchNormal  (None, None, None,   2048       ['conv5_block2_1_conv[0][0]']    \n"," ization)                       512)                                                              \n","                                                                                                  \n"," conv5_block2_1_relu (Activatio  (None, None, None,   0          ['conv5_block2_1_bn[0][0]']      \n"," n)                             512)                                                              \n","                                                                                                  \n"," conv5_block2_2_pad (ZeroPaddin  (None, None, None,   0          ['conv5_block2_1_relu[0][0]']    \n"," g2D)                           512)                                                              \n","                                                                                                  \n"," conv5_block2_2_conv (Conv2D)   (None, None, None,   2359296     ['conv5_block2_2_pad[0][0]']     \n","                                512)                                                              \n","                                                                                                  \n"," conv5_block2_2_bn (BatchNormal  (None, None, None,   2048       ['conv5_block2_2_conv[0][0]']    \n"," ization)                       512)                                                              \n","                                                                                                  \n"," conv5_block2_2_relu (Activatio  (None, None, None,   0          ['conv5_block2_2_bn[0][0]']      \n"," n)                             512)                                                              \n","                                                                                                  \n"," conv5_block2_3_conv (Conv2D)   (None, None, None,   1050624     ['conv5_block2_2_relu[0][0]']    \n","                                2048)                                                             \n","                                                                                                  \n"," conv5_block2_out (Add)         (None, None, None,   0           ['conv5_block1_out[0][0]',       \n","                                2048)                             'conv5_block2_3_conv[0][0]']    \n","                                                                                                  \n"," conv5_block3_preact_bn (BatchN  (None, None, None,   8192       ['conv5_block2_out[0][0]']       \n"," ormalization)                  2048)                                                             \n","                                                                                                  \n"," conv5_block3_preact_relu (Acti  (None, None, None,   0          ['conv5_block3_preact_bn[0][0]'] \n"," vation)                        2048)                                                             \n","                                                                                                  \n"," conv5_block3_1_conv (Conv2D)   (None, None, None,   1048576     ['conv5_block3_preact_relu[0][0]'\n","                                512)                             ]                                \n","                                                                                                  \n"," conv5_block3_1_bn (BatchNormal  (None, None, None,   2048       ['conv5_block3_1_conv[0][0]']    \n"," ization)                       512)                                                              \n","                                                                                                  \n"," conv5_block3_1_relu (Activatio  (None, None, None,   0          ['conv5_block3_1_bn[0][0]']      \n"," n)                             512)                                                              \n","                                                                                                  \n"," conv5_block3_2_pad (ZeroPaddin  (None, None, None,   0          ['conv5_block3_1_relu[0][0]']    \n"," g2D)                           512)                                                              \n","                                                                                                  \n"," conv5_block3_2_conv (Conv2D)   (None, None, None,   2359296     ['conv5_block3_2_pad[0][0]']     \n","                                512)                                                              \n","                                                                                                  \n"," conv5_block3_2_bn (BatchNormal  (None, None, None,   2048       ['conv5_block3_2_conv[0][0]']    \n"," ization)                       512)                                                              \n","                                                                                                  \n"," conv5_block3_2_relu (Activatio  (None, None, None,   0          ['conv5_block3_2_bn[0][0]']      \n"," n)                             512)                                                              \n","                                                                                                  \n"," conv5_block3_3_conv (Conv2D)   (None, None, None,   1050624     ['conv5_block3_2_relu[0][0]']    \n","                                2048)                                                             \n","                                                                                                  \n"," conv5_block3_out (Add)         (None, None, None,   0           ['conv5_block2_out[0][0]',       \n","                                2048)                             'conv5_block3_3_conv[0][0]']    \n","                                                                                                  \n"," post_bn (BatchNormalization)   (None, None, None,   8192        ['conv5_block3_out[0][0]']       \n","                                2048)                                                             \n","                                                                                                  \n"," post_relu (Activation)         (None, None, None,   0           ['post_bn[0][0]']                \n","                                2048)                                                             \n","                                                                                                  \n","==================================================================================================\n","Total params: 23,564,800\n","Trainable params: 23,519,360\n","Non-trainable params: 45,440\n","__________________________________________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"id":"1xTOq1HlV4QV"},"source":["# Set up a model that returns the activation values for our target layer\n","layer = model.get_layer(name=layer_name)\n","feature_extractor = keras.Model(inputs=model.inputs, outputs=layer.output)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Ku_5H_R7BhUg"},"source":["## Set up the gradient ascent process\n","\n","The \"loss\" we will maximize is simply the mean of the activation of a specific filter in\n","our target layer. To avoid border effects, we exclude border pixels.\n"]},{"cell_type":"code","metadata":{"id":"TeR4ERNIBhUh"},"source":["\n","def compute_loss(input_image, filter_index):\n","    activation = feature_extractor(input_image)\n","    # We avoid border artifacts by only involving non-border pixels in the loss.\n","    filter_activation = activation[:, 2:-2, 2:-2, filter_index]\n","    return tf.reduce_mean(filter_activation)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ABGkwsAKBhUi"},"source":["Our gradient ascent function simply computes the gradients of the loss above\n","with regard to the input image, and update the update image so as to move it\n","towards a state that will activate the target filter more strongly.\n"]},{"cell_type":"code","metadata":{"id":"ZtkYxVzNBhUj"},"source":["\n","@tf.function\n","def gradient_ascent_step(img, filter_index, learning_rate):\n","    with tf.GradientTape() as tape:\n","        tape.watch(img)\n","        loss = compute_loss(img, filter_index)\n","    # Compute gradients.\n","    grads = tape.gradient(loss, img)\n","    # Normalize gradients.\n","    grads = tf.math.l2_normalize(grads)\n","    img += learning_rate * grads\n","    return loss, img\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"PMyOZYulBhUj"},"source":["## Set up the end-to-end filter visualization loop\n","\n","Our process is as follow:\n","\n","- Start from a random image that is close to \"all gray\" (i.e. visually netural)\n","- Repeatedly apply the gradient ascent step function defined above\n","- Convert the resulting input image back to a displayable form, by normalizing it,\n","center-cropping it, and restricting it to the [0, 255] range.\n"]},{"cell_type":"code","metadata":{"id":"z2C3MDdyBhUk"},"source":["\n","def initialize_image():\n","    # We start from a gray image with some random noise\n","    img = tf.random.uniform((1, img_width, img_height, 3))\n","    # ResNet50V2 expects inputs in the range [-1, +1].\n","    # Here we scale our random inputs to [-0.125, +0.125]\n","    return (img - 0.5) * 0.25\n","\n","\n","def visualize_filter(filter_index):\n","    # We run gradient ascent for 20 steps\n","    iterations = 30\n","    learning_rate = 10.0\n","    img = initialize_image()\n","    for iteration in range(iterations):\n","        loss, img = gradient_ascent_step(img, filter_index, learning_rate)\n","\n","    # Decode the resulting input image\n","    img = deprocess_image(img[0].numpy())\n","    return loss, img\n","\n","\n","def deprocess_image(img):\n","    # Normalize array: center on 0., ensure variance is 0.15\n","    img -= img.mean()\n","    img /= img.std() + 1e-5\n","    img *= 0.15\n","\n","    # Center crop\n","    img = img[25:-25, 25:-25, :]\n","\n","    # Clip to [0, 1]\n","    img += 0.5\n","    img = np.clip(img, 0, 1)\n","\n","    # Convert to RGB array\n","    img *= 255\n","    img = np.clip(img, 0, 255).astype(\"uint8\")\n","    return img\n","\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"o1lkwgwyBhUl"},"source":["Let's try it out with filter 0 in the target layer:\n"]},{"cell_type":"code","metadata":{"id":"z26AdbQlBhUl"},"source":["from IPython.display import Image, display\n","\n","loss, img = visualize_filter(0)\n","keras.preprocessing.image.save_img(\"0.png\", img)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"mqwxOZAFBhUl"},"source":["This is what an input that maximizes the response of filter 0 in the target layer would\n","look like:\n"]},{"cell_type":"code","metadata":{"id":"q7lqao9eBhUm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637530031479,"user_tz":-60,"elapsed":4,"user":{"displayName":"Oluwatosin Alabi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11452325336631533332"}},"outputId":"486f9a4d-f6d6-4d4c-f38b-9ee24e0138d6"},"source":["display(Image(\"0.png\"))"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"uM6HRgpFBhUm"},"source":["## Visualize the first 64 filters in the target layer\n","\n","Now, let's make a 8x8 grid of the first 64 filters\n","in the target layer to get of feel for the range\n","of different visual patterns that the model has learned.\n"]},{"cell_type":"code","metadata":{"id":"vlcJ-gmVBhUm","colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"11zZvMUyilhO4wgIqvawWz5QQx5QHskLC"},"executionInfo":{"status":"ok","timestamp":1637530846219,"user_tz":-60,"elapsed":719622,"user":{"displayName":"Oluwatosin Alabi","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"11452325336631533332"}},"outputId":"ba7482b9-3aca-415b-e803-bf8114748b21"},"source":["# Compute image inputs that maximize per-filter activations\n","# for the first 64 filters of our target layer\n","all_imgs = []\n","for filter_index in range(64):\n","    print(\"Processing filter %d\" % (filter_index,))\n","    loss, img = visualize_filter(filter_index)\n","    all_imgs.append(img)\n","\n","# Build a black picture with enough space for\n","# our 8 x 8 filters of size 128 x 128, with a 5px margin in between\n","margin = 5\n","n = 8\n","cropped_width = img_width - 25 * 2\n","cropped_height = img_height - 25 * 2\n","width = n * cropped_width + (n - 1) * margin\n","height = n * cropped_height + (n - 1) * margin\n","stitched_filters = np.zeros((width, height, 3))\n","\n","# Fill the picture with our saved filters\n","for i in range(n):\n","    for j in range(n):\n","        img = all_imgs[i * n + j]\n","        stitched_filters[\n","            (cropped_width + margin) * i : (cropped_width + margin) * i + cropped_width,\n","            (cropped_height + margin) * j : (cropped_height + margin) * j\n","            + cropped_height,\n","            :,\n","        ] = img\n","keras.preprocessing.image.save_img(\"stiched_filters.png\", stitched_filters)\n","\n","from IPython.display import Image, display\n","\n","display(Image(\"stiched_filters.png\"))\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"tCTJVfhzBhUm"},"source":["Image classification models see the world by decomposing their inputs over a \"vector\n","basis\" of texture filters such as these.\n","\n","See also\n","[this old blog post](https://blog.keras.io/how-convolutional-neural-networks-see-the-world.html)\n","for analysis and interpretation.\n"]}]}